@model WebApp.Models.Pessoa

@{
    ViewBag.Title = "UPDATE";
}

<h2>UPDATE</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Pessoa</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.Label("NOME/RAZÃO SOCIAL", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NomeRazaoSocial, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NomeRazaoSocial, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group" onkeypress="mascara(this, '#####-###')">
            @Html.Label("CEP", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Cep, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Cep, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("EMAIL", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("CLASSIFICAÇÃO", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">

                @Html.DropDownListFor(model => model.Classificacao, new SelectList(ViewBag.SelectedStatus2, "Value", "Text"), htmlAttributes: new { @class = "form-control m-b" })

                @Html.ValidationMessageFor(model => model.Classificacao, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group" onkeypress="mascara(this, '###.###.###.##')">
            @Html.Label("CPF/CNPJ", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CpfCnpj, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CpfCnpj, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("TIPO PESSOA", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">

                @Html.DropDownListFor(model => model.TipoPessoa, new SelectList(ViewBag.SelectedStatus, "Value", "Text"), htmlAttributes: new { @class = "form-control m-b" })

                @Html.ValidationMessageFor(model => model.TipoPessoa, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.Label("TELEFONE", htmlAttributes: new { @class = "control-label col-md-2" })
            <div id="new-telefone" class="col-md-8">
                @foreach (var tel in Model.Telefone)
                {
                    @Html.Partial("_Telefone", tel)
                }
            </div>
            <div class="col-md-2">
                <button type="button" id="addTel" class="btn btn-default">NOVO</button>
            </div>
        </div>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="SALVAR" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("VOLTAR", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")


    <script language="JavaScript">
        /*
        A função Mascara tera como valores no argumento os dados inseridos no input (ou no evento onkeypress)
        onkeypress="mascara(this, '## ####-####')"
        */

        function mascara(t, mask) {
            t = t.childNodes[3].childNodes[1];
            var i = t.value.length;
            var saida = mask.substring(1, 0);
            var texto = mask.substring(i)
            if (texto.substring(0, 1) != saida) {
                t.value += texto.substring(0, 1);
            }
        }
    </script>

    <script type="text/javascript">
        $('#addTel').on('click', function () {
            $.ajax({

                type: "GET",
                url: "/Pessoas/AddNewTelefone",
                success: function (partialView) {
                    $('#new-telefone').append(partialView);
                }
            });

        });

        $("#deleteRow").on("click", function () {
            $(this).parents("#telefoneRow:first").remove();
            return false;
        });
    </script>
}
